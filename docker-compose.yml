services:
  ical-sync:
    build: .
    image: ical-to-gcal:latest
    restart: unless-stopped
    volumes:
      - ./credentials:/app/credentials
      - ./data:/app/data
    environment:
      - CREDENTIALS_PATH=/app/credentials/credentials.json
      - TOKEN_PATH=/app/credentials/token.json
      - ICS_URL=${ICS_URL}
      - CALENDAR_ID=${CALENDAR_ID}
      - SYNC_FLAGS=${SYNC_FLAGS:---dry-run}
    # Keep container running for Ofelia to execute commands
    entrypoint: ["/bin/sh", "-c"]
    command: ["tail -f /dev/null"]
    
  # Service for one-time credential setup
  setup:
    build: .
    image: ical-to-gcal:latest
    volumes:
      - ./credentials:/app/credentials
      - ./data:/app/data
    environment:
      - CREDENTIALS_PATH=/app/credentials/credentials.json
      - TOKEN_PATH=/app/credentials/token.json
    command: list_calendars.py
    profiles:
      - setup

  # Service for listing calendars
  list-calendars:
    build: .
    image: ical-to-gcal:latest
    volumes:
      - ./credentials:/app/credentials
      - ./data:/app/data
    environment:
      - CREDENTIALS_PATH=/app/credentials/credentials.json
      - TOKEN_PATH=/app/credentials/token.json
    command: python list_calendars.py
    profiles:
      - tools

  # Scheduled sync service (runs every 6 hours)
  scheduler:
    image: mcuadros/ofelia:latest
    restart: unless-stopped
    command: daemon --docker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - ical-sync
    labels:
      # Run sync command at :00 and :30 of every hour
      ofelia.job-exec.ical-sync.schedule: "0 0,30 * * * *"
      ofelia.job-exec.ical-sync.container: "ical_to_gcal-ical-sync-1"
      ofelia.job-exec.ical-sync.command: "/app/docker-entrypoint.sh"
